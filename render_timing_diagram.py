import matplotlib.pyplot as plt
import numpy as np


def avg(l):
    return round(sum(l) / len(l),1)


board_labels = ['3x3', '4x4', '5x5', '6x6']

# taken from weights and biases logging

python_times = [avg([4.361725499999011, 6.404798399998981, 6.351235900001484, 5.184517300000152, 5.578353699998843,
                     7.176906500000769, 6.841780300001119, 4.156209100001433, 6.1981615999975475, 6.169130399997812]),
                avg([50.776126799999474, 53.07020090000151, 43.587319400001434, 42.94432769999912, 41.82642699999997,
                     40.29205050000019
                        , 39.66724609999801, 43.54503130000012, 45.319218399999954, 42.039973400002054]),
                avg([104.98636940000142, 191.44110060000094, 228.51084730000002, 175.17587069999718, 137.22964929999944,
                     148.49386380000215, 168.33714469999904, 185.05316709999897, 236.1185856000011,
                     204.94462270000076]),
                avg([222.61240270000053, 334.3255376999987, 497.7704378999988, 384.95769700000164, 421.01129500000025,
                     407.1630336999988, 315.35305700000026, 219.97156019999966, 483.8214332999996, 162.46915400000216])]

swig_times_1thread = [
    avg([0.5396985999977915, 2.2438622000008763, 1.0183914999979606, 2.0615768999996362, 0.2890990000014426,
         1.3907459000001836, 1.7030607999986387, 0.2971608000007109, 0.670693800002482, 1.4095930000003136]),
    avg([13.674677499999234, 13.036685000002763, 12.599073299999873, 12.436599799999385,
         12.758605999999418, 14.66640069999994, 10.957594100000279, 9.127796900000249,
         11.614641599997412, 13.539823999999498]),
    avg([44.451592999997956, 44.451592999997956, 40.6738734999999, 23.890678100000514,
         51.19350999999733, 53.1712116000017, 46.13585370000146, 48.12000550000084,
         44.872326100001374, 15.450880699998379]),
    avg([56.631790899999193, 41.455434100000275, 53.11326199999894, 47.90513199999987,
         53.486833499999193, 56.493296600001486, 31.63179080000191, 30.398166900002252,
         71.786145999998553, 34.51493069999924])]

swig_times_2thread = [
    avg([1.418064699999377, 0.5741139000019757, 1.0775794000001042, 0.44893430000229273, 0.4560668000012811,
         0.6091784999989613, 0.38082159999976284, 1.233494599997357, 1.3634808999995585, 1.2727864000007685]),
    avg([11.555275399998209, 13.635606600000756, 12.111618599999929, 10.570794600000227,
         12.666462100001809, 9.883251200000814, 6.738532299998042, 7.056124500002625,
         11.712965700000495, 4.663946500000748]),
    avg([14.392988899999182, 5.420867299999372, 15.751618599999347, 15.61996210000143,
         7.441702300002362, 13.784437800000887, 8.357545700000628, 9.02991800000018,
         15.664270999997825, 9.352164600000833]),
    avg([11.896406299998489, 12.28229999999894, 11.399865499999578, 15.761349799999152,
         13.481292600001325, 15.085089100000914, 13.045804499997757, 15.588175599998067,
         13.230238599997392, 14.187894599999709])]

swig_times_4thread = [
    avg([0.5649387000012212, 0.5781171999988146, 0.37315900000248803, 0.6905631000008725, 0.9732598999980837,
         0.6673899000015808, 0.7665119000012055, 0.33829960000002757, 0.5167621000000509, 0.39955600000030245]),
    avg([4.146139199998288, 3.4184976000033203, 5.302640300000348, 5.345566199997847,
         2.910807100000966, 5.6084296999979415, 5.71523679999882, 5.638901799997257,
         4.958874500000093, 6.402863300001627]),
    avg([6.639079200002016, 9.422595299998648, 5.133927599999879, 8.529011300001002,
         9.829736399999092, 8.19037390000085, 4.975942600001872, 6.053471199997148, 6.427360599998792,
         4.243041299996548]),
    avg([4.5490652000007685, 10.48535769999944, 7.732868600000074, 4.642429899999115,
         8.876064199997927, 4.752561600002082, 12.660470000002533, 4.647934700002224,
         13.572728499999357, 7.140687399998569])]

swig_times_8thread = [
    avg([0.8209429000016826, 0.4234766999979911, 0.5675955999977305, 0.7393435000012687, 0.6763298000005307,
         0.6448792000010144, 0.7106065999978455, 0.6662910000013653, 0.5283255000031204, 0.5230731000010564]),
    avg([3.15215900000112, 4.360709999997198, 2.744885799998883, 4.277380299998185, 4.360606000002008,
         2.391638500001136, 3.4150743999998667, 4.99115829999937, 2.852524699999776,
         2.5026773999998113]),
    avg([5.528819499999372, 7.360125499999413, 5.502112999998644, 5.288191099996766,
         6.155931600002077, 6.424617699998635, 3.0610455999994883, 7.819177200002741,
         5.350076999999146, 5.066036000000167]),
    avg([6.665108400000463, 6.312827699999616, 6.698975700001029, 6.811324800000875,
         5.982091699999728, 2.899754199999734, 7.525970999999117, 3.7949823000017204,
         8.757116299999325, 5.865569099998538])]

x = np.arange(len(board_labels))  # the label locations
width = 0.15  # the width of the bars

fig, ax = plt.subplots()
rects1 = ax.bar(x - width * 2, python_times, width, label='Python', color='tab:grey')
rects2 = ax.bar(x - width, swig_times_1thread, width, label='C++/SWIG (1 Thread)', color='limegreen')
rects3 = ax.bar(x, swig_times_2thread, width, label='C++/SWIG (2 Threads)', color='forestgreen')
rects4 = ax.bar(x + width, swig_times_4thread, width, label='C++/SWIG (4 Threads)', color='green')
rects5 = ax.bar(x + width * 2, swig_times_8thread, width, label='C++/SWIG (8 Threads)', color='darkgreen')

# Add some text for labels, title and custom x-axis tick labels, etc.
ax.set_ylabel('Time per episode [in sec]')
ax.set_title('Time per episode by implementation and board size')
ax.set_xticks(x, board_labels)
ax.legend()

ax.bar_label(rects1, padding=3,color='tab:grey',size=7)
ax.bar_label(rects2, padding=3,color='limegreen',size=7)
ax.bar_label(rects3, padding=3,color='forestgreen',size=7)
ax.bar_label(rects4, padding=3,color='green',size=7)
ax.bar_label(rects5, padding=3,color='darkgreen',size=7)


fig.tight_layout()

#plt.show()
plt.savefig('diagrams/swig_wrapper_times_comparison.pdf')